// nextflow.config
def envFile = new File("${baseDir}/.devcontainer/.env")
def envMap = [:]

if (envFile.exists()) {
    envFile.eachLine { line ->
        if (line && !line.startsWith('#') && line.contains('=')) {
            def (k, v) = line.split('=', 2)
            envMap[k.trim()] = v.trim()
        }
    }
}

/* Resolve values: shell env > .env > fallback */
def DATA_ROOT = System.getenv('LOCAL_DATA_ROOT') ?: envMap['LOCAL_DATA_ROOT'] ?: "${projectDir}/data"

manifest {
    mainScript  = 'nextflow/main.nf'
}

profiles {
    // ---- Local dev with Docker (inside CUDA Devcontainer) ---
    local {
        process {
            executor    = 'local'
            container   = 'ghcr.io/omar-merhebi/interpretable-senescence-container:latest'
        }
        docker {
            enabled     = true
            runOptions  = "--gpus all"
        }
    }
}

params {
    data_root   = DATA_ROOT
    logdir      = "logs/"
}

timeline {
    enabled = true
    file    = "${params.logdir}/timeline.html"
}

trace {
    enabled = true
    file    = "${params.logdir}/trace.txt"
}

report {
    enabled = true
    file    = "${params.logdir}/report.html"
}

weblog.enabled = false